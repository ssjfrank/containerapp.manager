{
  "description": "Sample EMS message formats for testing",
  "examples": [
    {
      "scenario": "Simple text message",
      "message_type": "TextMessage",
      "properties": {
        "JMSDestination": "queue.app1.requests",
        "JMSDeliveryMode": "PERSISTENT",
        "JMSPriority": 4,
        "JMSMessageID": "ID:E4EMS-SERVER.1234567890"
      },
      "body": "Process order #12345"
    },
    {
      "scenario": "JSON payload message",
      "message_type": "TextMessage",
      "properties": {
        "JMSDestination": "queue.app1.events",
        "JMSDeliveryMode": "PERSISTENT",
        "JMSPriority": 4,
        "JMSMessageID": "ID:E4EMS-SERVER.1234567891",
        "CustomProperty": "CustomValue"
      },
      "body": {
        "eventType": "OrderCreated",
        "orderId": "12345",
        "timestamp": "2025-09-29T10:30:00Z",
        "customerId": "CUST-001",
        "items": [
          {"sku": "ITEM-001", "quantity": 2},
          {"sku": "ITEM-002", "quantity": 1}
        ]
      }
    },
    {
      "scenario": "High priority message",
      "message_type": "TextMessage",
      "properties": {
        "JMSDestination": "queue.app2.requests",
        "JMSDeliveryMode": "PERSISTENT",
        "JMSPriority": 9,
        "JMSMessageID": "ID:E4EMS-SERVER.1234567892",
        "Alert": "true"
      },
      "body": "URGENT: Process critical order #99999"
    }
  ],
  "notes": [
    "Use TIBCO EMS Admin tool or EMS Console to send these messages",
    "Message properties are automatically set by EMS",
    "Custom properties can be added as key-value pairs",
    "JMSPriority: 0-4 = normal, 5-9 = high priority"
  ],
  "send_commands": {
    "tibjmsadmin": [
      "# Connect to EMS",
      "tibjmsadmin -server tcp://localhost:7222 -user admin -password admin",
      "",
      "# Send a simple message",
      "send queue.app1.requests \"Process order #12345\"",
      "",
      "# Send multiple messages",
      "for i in {1..10}; do",
      "  send queue.app1.requests \"Test message $i\"",
      "done"
    ],
    "ems_console": [
      "1. Open EMS Console",
      "2. Navigate to Queues",
      "3. Right-click on queue.app1.requests",
      "4. Select 'Send Message'",
      "5. Enter message body and click Send"
    ]
  }
}